include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

stages:
  - pull
  - run

variables:
  WORKSPACE: '$${CI_CACHE_FOLDER}/rfm_workspace'
  JOB_NAME: rfm-$CI_PIPELINE_ID
  CLUSTER_NAME: "${CLUSTER_NAME}"
  F7T_TOKEN_URL: 'https://auth.cscs.ch/auth/realms/firecrest-clients/protocol/openid-connect/token'
  F7T_URL: 'https://firecrest.cscs.ch'

setup and pull:
  stage: pull
  tags: ["$TAG"]
  variables:
    # Valid MODE=('container-runner', 'baremetal', 'f7t-controller')
    MODE: "${RFM_MODE}"
    GIT_STRATEGY: "fetch"
    SLURM_ACCOUNT: "${SLURM_ACCOUNT}"
    FIRECREST_SYSTEM: "${FIRECREST_SYSTEM}"
  before_script:
    - echo $FIRECREST_SYSTEM / $CLUSTER_NAME / $RFM_MODE
    - pwd
    - uname -a
    - ./ci/scripts/alps_uenv.sh setup_uenv_and_oras &> setup_uenv_and_oras.log
    - source ./uenv-5.0.0/bin/activate-uenv
    - uenv --version
    - export PATH=$PWD:$UENV_PREFIX/libexec:$PATH
    - uenv-oras version
    - imgs=$(./ci/scripts/alps_uenv.sh uenv_image_find)
  script: |
    echo "imgs=$imgs"
    unset UENVA
    uenv repo create
    uenv repo status
    for img in $imgs; do
      ./ci/scripts/alps_uenv.sh oras_pull_meta_dir "$img"
      ./ci/scripts/alps_uenv.sh meta_has_reframe_yaml "$img" &> .rc
      cat .rc
      rc=$(grep -q OK .rc ; echo $?)
      echo "rc=$rc"
      if [ $rc -eq 0 ] ; then
        UENVA+="$img,"
        echo "UENVA=$UENVA"
      fi
    done
    UENVA=${UENVA%?}
    UENV=`echo ${UENVA} | sed 's-,,-,-g' | sort -u`
    echo "UENV=$UENV" > rfm_uenv.env
    cat rfm_uenv.env | tr , "\n"
  artifacts:
    reports:
      dotenv: rfm_uenv.env

run reframe:
  stage: run
  tags: ["$TAG"]
  needs: ['setup and pull']
  variables:
    MODE: "${RFM_MODE}"
    GIT_STRATEGY: "fetch"
    SLURM_ACCOUNT: "${SLURM_ACCOUNT}"
    FIRECREST_SYSTEM: "${FIRECREST_SYSTEM}"
  before_script:
    - echo $FIRECREST_SYSTEM / $CLUSTER_NAME / $RFM_MODE
    - pwd
    - uname -a
    - ./ci/scripts/alps_uenv.sh setup_uenv_and_oras &> setup_uenv_and_oras.log
    - source ./uenv-5.0.0/bin/activate-uenv
    - uenv --version
    - echo "UENV=$UENV" | tr , "\n"
  script:
    - rfm_path=$(./ci/scripts/alps_uenv.sh install_reframe)
    - echo "rfm_path=$rfm_path"
    - export PATH=$rfm_path:$PATH
    - reframe -V
    - ./ci/scripts/alps_uenv.sh launch_reframe
  artifacts:
    when: on_failure
    paths:
      - report.xml
    reports:
      junit: report.xml
